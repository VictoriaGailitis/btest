generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.Timestamptz(6)
  is_superuser               Boolean
  username                   String                       @unique @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.Timestamptz(6)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]

  @@index([username], map: "auth_user_username_6821ab7c_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_groups {
  id         BigInt     @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544")
  @@index([user_id], map: "auth_user_groups_user_id_6a12ed8b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_user_permissions {
  id              BigInt          @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permissions_permission_id_1fbb5f2c")
  @@index([user_id], map: "auth_user_user_permissions_user_id_a95ead1b")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.Timestamptz(6)
  object_id           String?
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.SmallInt
  change_message      String
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String
  expire_date  DateTime @db.Timestamptz(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
  @@index([session_key], map: "django_session_session_key_c0390e0f_like")
}

model quiz_block {
  id             BigInt           @id @default(autoincrement())
  name           String           @db.VarChar(255)
  quiz_question  quiz_question[]
  quiz_testblock quiz_testblock[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model quiz_question {
  id                  BigInt                @id @default(autoincrement())
  block_name          String                @db.VarChar(255)
  type                String                @db.VarChar(20)
  points              Int
  question            String
  answer              String
  block_id            BigInt?
  quiz_block          quiz_block?           @relation(fields: [block_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "quiz_question_block_id_68857019_fk_quiz_block_id")
  quiz_test_questions quiz_test_questions[]

  @@index([block_id], map: "quiz_question_block_id_68857019")
}

model quiz_test {
  id                  BigInt                @id @default(autoincrement())
  name                String                @db.VarChar(255)
  description         String
  created_at          DateTime              @db.Timestamptz(6)
  timer               Int
  codepass            String                @db.VarChar(255)
  quiz_test_questions quiz_test_questions[]
  quiz_testblock      quiz_testblock[]
  quiz_testresult     quiz_testresult[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model quiz_test_questions {
  id            BigInt        @id @default(autoincrement())
  test_id       BigInt
  question_id   BigInt
  quiz_question quiz_question @relation(fields: [question_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "quiz_test_questions_question_id_6aa88f5f_fk_quiz_question_id")
  quiz_test     quiz_test     @relation(fields: [test_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "quiz_test_questions_test_id_b0b5b24d_fk_quiz_test_id")

  @@unique([test_id, question_id], map: "quiz_test_questions_test_id_question_id_dec945d6_uniq")
  @@index([question_id], map: "quiz_test_questions_question_id_6aa88f5f")
  @@index([test_id], map: "quiz_test_questions_test_id_b0b5b24d")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model quiz_testblock {
  id            BigInt     @id @default(autoincrement())
  num_questions Int
  block_id      BigInt
  test_id       BigInt
  quiz_block    quiz_block @relation(fields: [block_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "quiz_testblock_block_id_781e953e_fk_quiz_block_id")
  quiz_test     quiz_test  @relation(fields: [test_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "quiz_testblock_test_id_075c5f3a_fk_quiz_test_id")

  @@unique([test_id, block_id], map: "quiz_testblock_test_id_block_id_c06b21e4_uniq")
  @@index([block_id], map: "quiz_testblock_block_id_781e953e")
  @@index([test_id], map: "quiz_testblock_test_id_075c5f3a")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model quiz_testresult {
  id                BigInt    @id @default(autoincrement())
  student_full_name String    @db.VarChar(255)
  student_group     String    @db.VarChar(100)
  total_score       Float
  max_score         Float
  percent           Float
  started_at        DateTime  @db.Timestamptz(6)
  finished_at       DateTime  @db.Timestamptz(6)
  duration_sec      Int
  details           Json
  created_at        DateTime  @db.Timestamptz(6)
  test_id           BigInt
  quiz_test         quiz_test @relation(fields: [test_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "quiz_testresult_test_id_d9d0f966_fk_quiz_test_id")

  @@index([test_id], map: "quiz_testresult_test_id_d9d0f966")
}
